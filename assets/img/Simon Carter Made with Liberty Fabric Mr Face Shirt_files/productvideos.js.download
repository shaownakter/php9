var ekmPlayProductVideo;

(function(){

const IS_MOBILE_DEVICE = (function(){
	var userAgent = navigator.userAgent||navigator.vendor||window.opera;

	var re1 = /android|(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i;
	var re2 = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i;
	
	var isMobile = (re1.test(userAgent) || re2.test(userAgent.substr(0,4)));

	return isMobile;
})();

function getYTAPI(){
	if (getYTAPI._ytstatus === 'resolved'){
		return Promise.resolve(window.YT);
	}

	if (getYTAPI._ytstatus === 'pending'){
		return new Promise(resolve => {
			getYTAPI._ytresolves.push(resolve);
		});
	}

	getYTAPI._ytstatus = 'pending';

	window.onYouTubeIframeAPIReady = () => {
		getYTAPI._ytstatus = 'resolved';
		getYTAPI._ytresolves.forEach(resolve => {
			resolve(window.YT);
		});
		delete getYTAPI._ytresolves;
	}

	var tag = document.createElement('script');

	tag.src = "https://www.youtube.com/iframe_api";
	var firstScriptTag = document.getElementsByTagName('script')[0];
	firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

	return new Promise(resolve => {
		getYTAPI._ytresolves = [resolve];
	});
}

function displayVideo(videoId, elements, width, height){
	return getYTAPI().then(YT => {
		var player = new YT.Player(elements.video, {
			width: width,
			height: height,
			videoId: videoId,
			playerVars: {
				rel: 0
			},
			events: {
				onReady: event => {
					event.target.playVideo();
				},
				onError: event => {
					switch (event.data){
						case 2:
							displayError(elements, {message: 'Invalid video id.', id: 101});
							break;

						case 5: 
							displayError(elements, {message: 'Playback error.', id: 102});
							break;

						case 100:
							displayError(elements, {message: 'Video not found.', id: 103});
							break;

						case 101:
						case 150:
							displayError(elements, {message: 'Video cannot be embeded.', id: 104});
							break;

						default:
							displayError(elements, {message: 'Unkown error.', id: 0});
					}
				}
			}
		});
		return player;
	});
}

function getScrollBarWidth(){
	var outer = document.createElement('div');
	outer.style.height = '100px';
	outer.style.overflow = 'scroll';
	outer.style.visibility = 'hidden';
	document.body.appendChild(outer);

	var inner = document.createElement('div');
	inner.style.width = '100%';
	inner.height = '200px';
	outer.appendChild(inner);

	var width = outer.offsetWidth - inner.offsetWidth;

	outer.parentNode.removeChild(outer);

	return width;
}

function displayError(elements, err){
	var msg1 = err.message;
	var msg2;

	switch (err.id){
		case 101:
		case 103:
			msg2 = 'Looks like this video no longer exists. Sorry.';
			break;

		case 102:
			msg2 = 'Please try again.';
			break;

		case 104:
			msg2 = 'The owner of this video has prevented it from being embeded.';
			break;

		default:
			msg2 = 'Something went wrong and we cannot show display this video at this time.';
	}

	var p1 = document.createElement('p');
	p1.appendChild(document.createTextNode(msg1));

	var p2 = document.createElement('p');
	p2.appendChild(document.createTextNode(msg2));

	elements.error.appendChild(p1);
	elements.error.appendChild(p2);
	elements.error.style.display = 'flex';
}

function setupPlayerElements(videoData){
	var screen = document.createElement('div');
	
	screen.className = 'ekm-product-video-screen';

	var modal = document.createElement('div');

	modal.style.background = '#000';

	var video = document.createElement('div');

	var videoWrapper = document.createElement('div');
	videoWrapper.className = 'ekm-product-video-wrapper';

	videoWrapper.style.backgroundImage = 'url("' + videoData.preview + '")';

	var close = document.createElement('div');

	close.className = 'ekm-product-video-modal-close';

	var closeBtn = document.createElement('div');
	closeBtn.className = 'ekm-product-video-modal-close-btn';

	var errEl = document.createElement('div');
	errEl.className = 'ekm-product-video-error';

	screen.appendChild(modal);
	modal.appendChild(videoWrapper);
	videoWrapper.appendChild(video);
	videoWrapper.appendChild(errEl);
	modal.appendChild(close);
	close.appendChild(closeBtn);
	closeBtn.appendChild(document.createTextNode('Close'));

	document.body.appendChild(screen);

	var extraUIHeight = close.getBoundingClientRect().height;

	var screenWidth = window.innerWidth - getScrollBarWidth();
	var screenHeight = window.innerHeight - extraUIHeight;

	if (IS_MOBILE_DEVICE){
		screenWidth = window.innerWidth;
		screenHeight = window.innerHeight;
	}

	var width = videoData.width;
	var height = videoData.height;
	var ratio = width / height;

	if (width > screenWidth){
		width = screenWidth;
		height = width / ratio;
	}

	if (height > screenHeight){
		height = screenHeight;
		width = height * ratio;
	}
	
	videoWrapper.style.width = width + 'px';
	videoWrapper.style.height = height + 'px';

	return {
		elements:{
			screen: screen,
			modal: modal,
			video: video,
			close: close,
			videoWrapper: videoWrapper,
			error: errEl
		},
		width: width,
		height: height
	};
}

function updateVideoSize(player, videoData, elements, isFullScreen){
	isFullScreen = isFullScreen || false;

	var extraUIHeight = elements.close.getBoundingClientRect().height;

	var screenWidth = window.innerWidth - getScrollBarWidth();
	var screenHeight = window.innerHeight - extraUIHeight;


	if (isFullScreen){
		screenWidth = window.innerWidth;
		screenHeight = window.innerHeight;
		extraUIHeight = 0;
	}

	var width = videoData.width;
	var height = videoData.height;
	var ratio = width / height;

	if (width > screenWidth){
		width = screenWidth;
		height = width / ratio;
	}

	if (height > screenHeight){
		height = screenHeight;
		width = height * ratio;
	}

	player.setSize(width, height);

	elements.videoWrapper.style.width = width + 'px';
	elements.videoWrapper.style.height = height + 'px';

	return {
		width: width,
		height: height
	}

}

function getVideoData(el){
	try {
		return JSON.parse(el.getAttribute('data-video'));
	}
	catch (err){
		return null;
	}
}

function playVideo(videoData){
	var playerData = setupPlayerElements(videoData);
	var player;
	var closed = false;
	var onResize;
	var onFullScreenChange;
	var isInFullScreen = false;

	if (IS_MOBILE_DEVICE){
		if (playerData.elements.screen.requestFullscreen){
			onFullScreenChange = function(){
				var fullscreenElement = document.fullscreenElement;

				if (fullscreenElement === playerData.elements.screen){
					isInFullScreen = true;
					playerData.elements.screen.classList.add('full-screen');
				}
				else {
					isInFullScreen = false;
					playerData.elements.screen.classList.remove('full-screen');
				}
			};

			document.addEventListener('fullscreenchange', onFullScreenChange);

			playerData.elements.screen.requestFullscreen();
		}
	}

	displayVideo(videoData.id, playerData.elements, playerData.width, playerData.height).then(function(p){
		player = p;

		if (closed){
			p.destroy();
			return;
		}

		var timeoutid;
		onResize = function(event){
			clearTimeout(timeoutid);

			timeoutid = setTimeout(function(){
				updateVideoSize(player, videoData, playerData.elements, isInFullScreen);
			}, 750);
		};

		window.addEventListener('resize', onResize);
	});

	playerData.elements.screen.addEventListener('click', function onClick(event){
		var el = playerData.elements.screen;
		
		el.removeEventListener('click', onClick);

		if (player) player.destroy();

		el.parentNode.removeChild(el);

		if (onResize) window.removeEventListener('resize', onResize);

		if (onFullScreenChange){
			document.removeEventListener('fullscreenchange', onFullScreenChange);
		}
	});
}

Array.from(document.querySelectorAll('a[data-video]')).forEach(function(el){
	var img = el.querySelector('img');
	img.addEventListener('click', function(event){
		var data = getVideoData(el);
		if (data === null) return;
		data.preview = el.getAttribute('data-largeimg') || img.src;
		event.preventDefault();
		playVideo(data);
	});
});

ekmPlayProductVideo = playVideo;

})();